<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
	   http://www.springframework.org/schema/tx
	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" default-lazy-init="true">

    <!-- 【扫描注解配置的DAO】 -->
    <context:annotation-config/>
    <context:component-scan base-package="com.appleieye.maya.dal"/>
    <context:property-placeholder location="jdbc.properties" />

    <!-- 【数据源】 -->
    <bean id="mayaDataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${jdbc.initialPoolSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${jdbc.maxPoolSize}"></property>
        <!--&lt;!&ndash; 连接池最大空闲 &ndash;&gt;-->
        <!--<property name="maxIdle" value="${jd}"></property>-->
        <!-- 连接池最小空闲 -->
        <!--<property name="minIdle" value="${jd}"></property>-->
        <!-- 获取连接最大等待时间 -->
        <!--<property name="maxWait" value="${maxWait}"></property>-->
    </bean>


    <!-- 【事务管理器】 -->
    <bean id="mayaTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="mayaDataSource"/>
    </bean>

    <!-- 【MyBatis配置】 -->
    <bean id="mayaSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mappers-config.xml"/>
        <property name="mapperLocations" value="classpath:mybatis/*.xml" />
        <property name="dataSource" ref="mayaDataSource"/>
    </bean>

    <bean id="MapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 这里的basePackage 指定了dao层接口路劲，这里的dao接口不用自己实现 -->
        <property name="basePackage" value="com.appleieye.maya.dal.user" />
        <!-- 如果只有一个数据源的话可以不用指定，但是如果有多个数据源的话必须要指定 -->
        <!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> -->
        <!--直接指定了sqlsessionTemplate名称，这个和上面的其实是一样的 -->
        <!-- <property name="sqlSessionTemplateBeanName" value="sqlSession" /> -->
    </bean>
    <bean id="mayaSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="mayaSqlSessionFactory"/>
    </bean>

    <bean id="mayaMybatisTemplate" class="com.ximalaya.xmen.cable.commons.mybatis.MybatisBaseDAOImpl">
        <property name="sqlSessionTemplate" ref="mayaSqlSessionTemplate"/>
    </bean>

    <tx:annotation-driven transaction-manager="mayaTransactionManager"/>

</beans>